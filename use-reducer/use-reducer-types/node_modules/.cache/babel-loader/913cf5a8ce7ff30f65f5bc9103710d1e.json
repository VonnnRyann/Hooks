{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/DCI/react_official19_02_22/use-reducer/src/components/AddToArray.jsx\",\n    _s = $RefreshSig$();\n\nimport { useReducer, useEffect, useRef } from 'react';\nimport { textReducer } from '../reducers/textReducer';\nimport { addToArrayReducer } from '../reducers/addToArrayReducer';\nimport ACTION from '../actions/action';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddToArray = () => {\n  _s();\n\n  const [text, dispatchText] = useReducer(textReducer, '');\n  const [array, dispatchArray] = useReducer(addToArrayReducer, []);\n  const myRef = useRef();\n  useEffect(() => {\n    myRef.current.focus();\n  }, []);\n\n  const addToArray = e => {\n    e.preventDefault();\n    dispatchArray({\n      type: ACTION.ADD,\n      payload: text\n    });\n    dispatchText({\n      type: ACTION.RESET\n    });\n    myRef.current.focus();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ref: myRef,\n        placeholder: \"Please Enter some Text\",\n        onChange: e => dispatchText({\n          type: ACTION.GRAB,\n          payload: e.target.value\n        }),\n        value: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addToArray,\n        children: \"Add to Array\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddToArray, \"KqrPMm3E8qU6faNgpZFAXvJS/k8=\");\n\n_c = AddToArray;\nexport default AddToArray;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddToArray\");","map":{"version":3,"sources":["/home/user/Desktop/DCI/react_official19_02_22/use-reducer/src/components/AddToArray.jsx"],"names":["useReducer","useEffect","useRef","textReducer","addToArrayReducer","ACTION","AddToArray","text","dispatchText","array","dispatchArray","myRef","current","focus","addToArray","e","preventDefault","type","ADD","payload","RESET","GRAB","target","value"],"mappings":";;;AAAA,SAAQA,UAAR,EAAoBC,SAApB,EAA+BC,MAA/B,QAA4C,OAA5C;AACA,SAAQC,WAAR,QAA0B,yBAA1B;AACA,SAAQC,iBAAR,QAAgC,+BAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;AAGA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,IAAD,EAAOC,YAAP,IAAuBR,UAAU,CAACG,WAAD,EAAc,EAAd,CAAvC;AACA,QAAM,CAACM,KAAD,EAAQC,aAAR,IAAyBV,UAAU,CAACI,iBAAD,EAAmB,EAAnB,CAAzC;AAEA,QAAMO,KAAK,GAAGT,MAAM,EAApB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,KAAK,CAACC,OAAN,CAAcC,KAAd;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMC,UAAU,GAAIC,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACAN,IAAAA,aAAa,CAAC;AACZO,MAAAA,IAAI,EAACZ,MAAM,CAACa,GADA;AAEZC,MAAAA,OAAO,EAAEZ;AAFG,KAAD,CAAb;AAIAC,IAAAA,YAAY,CAAC;AACXS,MAAAA,IAAI,EAACZ,MAAM,CAACe;AADD,KAAD,CAAZ;AAGAT,IAAAA,KAAK,CAACC,OAAN,CAAcC,KAAd;AACD,GAVD;;AAWA,sBACE;AAAA,2BACE;AAAA,8BACE;AACA,QAAA,IAAI,EAAC,MADL;AAEA,QAAA,GAAG,EAAEF,KAFL;AAGA,QAAA,WAAW,EAAC,wBAHZ;AAIA,QAAA,QAAQ,EAAGI,CAAD,IAAOP,YAAY,CAAC;AAC5BS,UAAAA,IAAI,EAACZ,MAAM,CAACgB,IADgB;AAE5BF,UAAAA,OAAO,EAAEJ,CAAC,CAACO,MAAF,CAASC;AAFU,SAAD,CAJ7B;AAQA,QAAA,KAAK,EAAEhB;AARP;AAAA;AAAA;AAAA;AAAA,cADF,eAWE;AAAQ,QAAA,OAAO,EAAEO,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CAxCD;;GAAMR,U;;KAAAA,U;AA0CN,eAAeA,UAAf","sourcesContent":["import {useReducer, useEffect, useRef} from 'react'\nimport {textReducer} from '../reducers/textReducer'\nimport {addToArrayReducer} from '../reducers/addToArrayReducer'\nimport ACTION from '../actions/action'\n\n\nconst AddToArray = () => {\n  const [text, dispatchText] = useReducer(textReducer, '')\n  const [array, dispatchArray] = useReducer(addToArrayReducer,[])\n\n  const myRef = useRef();\n\n  useEffect(() => {\n    myRef.current.focus();\n  }, [])\n\n  const addToArray = (e) => {\n    e.preventDefault()\n    dispatchArray({\n      type:ACTION.ADD,\n      payload: text\n    })\n    dispatchText({\n      type:ACTION.RESET\n    })\n    myRef.current.focus();\n  }\n  return (\n    <div>\n      <form>\n        <input \n        type=\"text\" \n        ref={myRef} \n        placeholder='Please Enter some Text'\n        onChange={(e) => dispatchText({\n          type:ACTION.GRAB,\n          payload: e.target.value\n        })}\n        value={text}\n        />\n        <button onClick={addToArray}>\n          Add to Array\n        </button>\n      </form>\n    </div>\n  )\n}\n\nexport default AddToArray"]},"metadata":{},"sourceType":"module"}